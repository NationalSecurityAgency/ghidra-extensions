Notes:
- Volatility is file-based having been developed primarily for core dump analysis. The current implementation 
uses Python's FUSE implementation to link Volatility's file accesses to gdb memory accesses. The files access point
is hard-wired for the moment to /mnt/gdb, which is linked to ghidra_install_dir/Ghidra/Debug/Debugger-agent-gdb-vol/data.
- Currently, the mount point must be freed between executions: "sudo umount -l /mnt/gdb"
- Because core dumps are mapped to physical memory, the command "maintenance packet Qqemu.PhyMemMode:1" must be
issued from the gdb CLI prior to invoking any ghidragdb/ghidravol commands.

- Config files are assumed to match the commands being executed, i.e. windows.pslist.PsList uses windows.config.
- Config files require several "magic" values to work correctly, including:
     - kernel.layer_name.kernel_virtual_offset & kernel.offset
     - kernel.layer_name.page_map_offset
     - kernel.symbol_table_name.isf_url
 - The page_map_offset is currently set to 0xDBACE000L (3685539840), which will cause the read_memory code
 to use the value stored in CR3 if that address is requested. This save modifying the config with the running
 CR3 value. That said, certain functions may requires the system CR3, i.e. not the current CR3.
 - The other magic values as they would be for Volatility.
 - For Linux, kernel.layer_name.kernel_virtual_offset can be set to 0 if the kernel is booted with nokaslr.
 Typically, this is done using by:
    - editing /etc/default/grub.d/50-cloudimg-settings.cfg or the equivalent
    - appending nokaslr to GRUB_CMDLINE_LINUX_DEFAULT
    - sudo update-grub
    - sudo reboot
    - you can verify the result using "cat /proc/cmdline"
- For KASLR'd kernels, you can obtain the value using "sudo su; cat /proc/kallsyms | grep init_top_pgt"
- To obtain, kernel.symbol_table_name.isf_url:
    - install dwarf2json
    - run banners.Banners, if necessary, to get the kernel specifics
    - download the matching ddeb from http://ddebs.ubuntu.com/pool/main/l/linux/
    - ar -x linux-image-unsigned-5.15.0-50-generic-dbgsym_5.15.0-50.56_amd64.ddeb
    - tar xvf data.tar.gz
    - cp ./usr/lib/debug/boot/vmlinux-5.15.0-50-generic to dwarf2json_install_dir/dwarf2json
    - ./dwarf2json linux --elf vmlinux-5.15.0-50-generic > vmlinux-5.15.0-50-generic.json
    - cp vmlinux-5.15.0-50-generic.json to /vol3_install_dir/volatility3/framework/symbols/linux
    - modify linux.config to match
    - (NB: it may be difficult to find the exact match on the above website)
    
- The Volitlity Linux commands sweep memory by default for every command.  Once you have the config file 
set correctly.  Move vol_install_dir/volatility3/frameworks/automagic/linux.py to linux.saved.  Failure to 
do so will cause many of the commands to timeout with relatively undecipherable error messages.

- A typical gdb session might look like:
    - target remote :1234
    - python import ghidravol
    - ghidra trace listen
    - (from Ghidra, run the ConnectTraceRmiScript)
    - ghidra trace start
    - ghidra trace tx-start "tx"
    - ghidra trace put-all
    - ghidra trace put-all-vol-linux
    - ghidra trace tx-commit
    - ghidra trace activate
    - (commands can be abbreviated or tab-completed in many cases)


